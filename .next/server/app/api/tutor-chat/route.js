"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/tutor-chat/route";
exports.ids = ["app/api/tutor-chat/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftutor-chat%2Froute&page=%2Fapi%2Ftutor-chat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftutor-chat%2Froute.ts&appDir=C%3A%5CUsers%5Cchanj%5COneDrive%5CDesktop%5Chackathon%20project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cchanj%5COneDrive%5CDesktop%5Chackathon%20project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftutor-chat%2Froute&page=%2Fapi%2Ftutor-chat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftutor-chat%2Froute.ts&appDir=C%3A%5CUsers%5Cchanj%5COneDrive%5CDesktop%5Chackathon%20project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cchanj%5COneDrive%5CDesktop%5Chackathon%20project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var C_Users_chanj_OneDrive_Desktop_hackathon_project_app_api_tutor_chat_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/tutor-chat/route.ts */ \"(rsc)/./app/api/tutor-chat/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/tutor-chat/route\",\n        pathname: \"/api/tutor-chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/tutor-chat/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\chanj\\\\OneDrive\\\\Desktop\\\\hackathon project\\\\app\\\\api\\\\tutor-chat\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_chanj_OneDrive_Desktop_hackathon_project_app_api_tutor_chat_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/tutor-chat/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ0dXRvci1jaGF0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZ0dXRvci1jaGF0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGdHV0b3ItY2hhdCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNjaGFuaiU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q2hhY2thdGhvbiUyMHByb2plY3QlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q2NoYW5qJTVDT25lRHJpdmUlNUNEZXNrdG9wJTVDaGFja2F0aG9uJTIwcHJvamVjdCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDb0Q7QUFDbkg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDaUo7O0FBRWpKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnV0dXJvcGFsLWRhc2hib2FyZC8/ZTU2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxjaGFualxcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXGhhY2thdGhvbiBwcm9qZWN0XFxcXGFwcFxcXFxhcGlcXFxcdHV0b3ItY2hhdFxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdHV0b3ItY2hhdC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3R1dG9yLWNoYXRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3R1dG9yLWNoYXQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxjaGFualxcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXGhhY2thdGhvbiBwcm9qZWN0XFxcXGFwcFxcXFxhcGlcXFxcdHV0b3ItY2hhdFxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS90dXRvci1jaGF0L3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftutor-chat%2Froute&page=%2Fapi%2Ftutor-chat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftutor-chat%2Froute.ts&appDir=C%3A%5CUsers%5Cchanj%5COneDrive%5CDesktop%5Chackathon%20project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cchanj%5COneDrive%5CDesktop%5Chackathon%20project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/tutor-chat/route.ts":
/*!*************************************!*\
  !*** ./app/api/tutor-chat/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_ai_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/ai-agent */ \"(rsc)/./lib/ai-agent.ts\");\n/* harmony import */ var _lib_openrouter_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/openrouter-client */ \"(rsc)/./lib/openrouter-client.ts\");\n\n\n\n// 🧠 Student Learning Analysis Functions\nfunction analyzeStudentNeeds(question, studentHistory) {\n    const questionLower = question.toLowerCase();\n    // Detect learning intent\n    let intent = \"general\";\n    if (questionLower.includes(\"explain\") || questionLower.includes(\"understand\")) intent = \"explanation\";\n    else if (questionLower.includes(\"practice\") || questionLower.includes(\"quiz\")) intent = \"practice\";\n    else if (questionLower.includes(\"help\") || questionLower.includes(\"confused\")) intent = \"support\";\n    else if (questionLower.includes(\"memorize\") || questionLower.includes(\"remember\")) intent = \"memorization\";\n    // Detect if extra patience is needed\n    const patienceKeywords = [\n        \"confused\",\n        \"don't understand\",\n        \"struggling\",\n        \"difficult\",\n        \"hard\",\n        \"help me\",\n        \"lost\"\n    ];\n    const needsExtraPatience = patienceKeywords.some((keyword)=>questionLower.includes(keyword));\n    // Analyze learning patterns from history\n    let patterns = \"First interaction\";\n    if (studentHistory) {\n        patterns = \"Regular learner with consistent engagement\";\n    }\n    return {\n        intent,\n        needsExtraPatience,\n        patterns\n    };\n}\n// 🌡️ Dynamic Temperature Control\nfunction getDynamicTemperature(question) {\n    const questionLower = question.toLowerCase();\n    if (questionLower.includes(\"brainstorm\") || questionLower.includes(\"creative\") || questionLower.includes(\"ideas\")) {\n        return 0.7 // Higher creativity\n        ;\n    } else if (questionLower.includes(\"explain\") || questionLower.includes(\"define\") || questionLower.includes(\"formula\")) {\n        return 0.2 // Lower for precision\n        ;\n    } else if (questionLower.includes(\"example\") || questionLower.includes(\"practice\")) {\n        return 0.4 // Moderate for variety\n        ;\n    }\n    return 0.3 // Default balanced temperature\n    ;\n}\n// 🏷️ Topic Tagging\nfunction extractTopicTags(question, studyContext) {\n    const questionLower = question.toLowerCase();\n    const tags = [\n        \"General\"\n    ];\n    // Subject detection\n    const subjects = {\n        \"Math\": [\n            \"math\",\n            \"algebra\",\n            \"calculus\",\n            \"geometry\",\n            \"arithmetic\",\n            \"equation\",\n            \"formula\"\n        ],\n        \"Science\": [\n            \"science\",\n            \"biology\",\n            \"chemistry\",\n            \"physics\",\n            \"experiment\",\n            \"hypothesis\"\n        ],\n        \"History\": [\n            \"history\",\n            \"historical\",\n            \"century\",\n            \"war\",\n            \"ancient\",\n            \"civilization\"\n        ],\n        \"Language\": [\n            \"grammar\",\n            \"writing\",\n            \"literature\",\n            \"essay\",\n            \"vocabulary\",\n            \"language\"\n        ],\n        \"Programming\": [\n            \"code\",\n            \"programming\",\n            \"algorithm\",\n            \"function\",\n            \"variable\",\n            \"syntax\"\n        ]\n    };\n    for (const [subject, keywords] of Object.entries(subjects)){\n        if (keywords.some((keyword)=>questionLower.includes(keyword))) {\n            tags.push(subject);\n        }\n    }\n    if (studyContext && !tags.includes(studyContext)) {\n        tags.push(studyContext);\n    }\n    return tags.filter((tag)=>tag !== \"General\").length > 0 ? tags.filter((tag)=>tag !== \"General\") : [\n        \"General\"\n    ];\n}\n// 💖 Adaptive Encouragement\nfunction getAdaptiveEncouragement(studentAnalysis, topicTags) {\n    const baseEncouragement = [\n        \"You're doing great! Keep up the wonderful learning momentum! \\uD83C\\uDF1F\",\n        \"Excellent question! I'm here to support your learning journey! \\uD83D\\uDCAA\",\n        \"I love your curiosity! What would you like to explore next? \\uD83D\\uDE80\"\n    ];\n    const patienceEncouragement = [\n        \"Take your time - learning is a journey, not a race! I'm here to help every step of the way! \\uD83C\\uDF31\",\n        \"You're asking great questions! Remember, every expert was once a beginner. Keep going! \\uD83D\\uDC99\",\n        \"It's completely normal to find this challenging. Let's break it down together - you've got this! \\uD83E\\uDD1D\",\n        \"Learning takes patience, and you're showing great determination! I'm proud of your effort! ⭐\"\n    ];\n    if (studentAnalysis.needsExtraPatience) {\n        return patienceEncouragement;\n    }\n    return baseEncouragement;\n}\n// 📊 Enhanced Confidence Assessment\nfunction assessStudentConfidence(question, studentHistory, studentAnalysis) {\n    const questionLower = question.toLowerCase();\n    let confidenceLevel = 75 // Default\n    ;\n    // Negative confidence indicators\n    if (questionLower.includes(\"confused\") || questionLower.includes(\"don't understand\") || questionLower.includes(\"lost\") || questionLower.includes(\"struggling\")) {\n        confidenceLevel = 40;\n    } else if (questionLower.includes(\"help\") || questionLower.includes(\"difficult\")) {\n        confidenceLevel = 55;\n    } else if (questionLower.includes(\"sure\") || questionLower.includes(\"confident\") || questionLower.includes(\"ready\") || questionLower.includes(\"understand\")) {\n        confidenceLevel = 90;\n    } else if (questionLower.includes(\"practice\") || questionLower.includes(\"try\")) {\n        confidenceLevel = 80;\n    }\n    return confidenceLevel;\n}\n// 🎯 Patience Level Calculator\nfunction calculatePatienceNeeded(confidenceLevel, studentAnalysis) {\n    if (confidenceLevel < 50 || studentAnalysis.needsExtraPatience) {\n        return \"High - Extra patience and encouragement needed\";\n    } else if (confidenceLevel < 70) {\n        return \"Medium - Standard supportive approach\";\n    } else {\n        return \"Low - Student is confident, can provide more challenge\";\n    }\n}\nasync function POST(request) {\n    try {\n        const { question, studyContext, studentHistory, language, customSystemPrompt } = await request.json();\n        if (!question) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                error: \"Missing required field: question\"\n            }, {\n                status: 400\n            });\n        }\n        // Analyze student's learning patterns and needs\n        const studentAnalysis = analyzeStudentNeeds(question, studentHistory);\n        // Prepare context for the tutor with enhanced patience indicators\n        const historyContext = studentHistory ? `Student's recent performance: ${JSON.stringify(studentHistory)}\\nLearning patterns: ${studentAnalysis.patterns}` : \"First interaction with this student - be extra patient and encouraging\";\n        let tutorPrompt = _lib_ai_agent__WEBPACK_IMPORTED_MODULE_1__.PROMPTS.TUTOR_CHAT.replace(\"{{STUDY_CONTEXT}}\", studyContext || \"General learning session\").replace(\"{{QUESTION}}\", question).replace(\"{{HISTORY}}\", historyContext);\n        // Add language instruction if specified\n        if (language && language !== \"English\") {\n            tutorPrompt += `\\n\\nPlease respond in ${language}.`;\n        }\n        // Add patience reminders based on student needs\n        if (studentAnalysis.needsExtraPatience) {\n            tutorPrompt += \"\\n\\nIMPORTANT: This student may need extra patience and encouragement. Break down complex concepts into smaller steps.\";\n        }\n        // Dynamic temperature control based on intent\n        const temperature = getDynamicTemperature(question);\n        // Enhanced system prompt for patient teaching\n        const enhancedSystemPrompt = customSystemPrompt || `You are an expert AI tutor for FuturoPal with infinite patience and empathy. Your teaching philosophy:\r\n\r\n🎯 CORE PRINCIPLES:\r\n- NEVER rush or overwhelm students\r\n- Break complex topics into digestible steps\r\n- Celebrate small wins and progress\r\n- Use encouraging, positive language\r\n- Adapt explanations to student's level\r\n- Provide multiple examples when needed\r\n\r\n💡 TEACHING APPROACH:\r\n- Start with what the student already knows\r\n- Use analogies and real-world examples\r\n- Ask guiding questions to promote thinking\r\n- Offer practice opportunities\r\n- Be enthusiastic about learning\r\n\r\n🌟 PATIENCE INDICATORS:\r\n- If student seems confused, slow down and simplify\r\n- Repeat important concepts in different ways\r\n- Acknowledge when topics are challenging\r\n- Remind students that learning takes time\r\n- Encourage questions and curiosity\r\n\r\nRespond as a patient, understanding teacher who genuinely cares about student success.`;\n        console.debug(\"\\uD83C\\uDF93 Tutor Prompt Analysis:\", {\n            questionIntent: studentAnalysis.intent,\n            temperature,\n            promptLength: tutorPrompt.length,\n            needsPatience: studentAnalysis.needsExtraPatience\n        });\n        const result = await _lib_openrouter_client__WEBPACK_IMPORTED_MODULE_2__.openRouterClient.generateResponse({\n            prompt: tutorPrompt,\n            systemPrompt: enhancedSystemPrompt,\n            options: {\n                temperature,\n                top_p: 0.9,\n                max_tokens: 1000\n            }\n        });\n        if (!result.success) {\n            throw new Error(`AI API error: ${result.error}`);\n        }\n        const data = result.data;\n        // Add helpful actions based on the question type with flashcard support\n        let suggestedActions = [];\n        const questionLower = question.toLowerCase();\n        // 🃏 Flashcard Support\n        if (questionLower.includes(\"flashcard\") || questionLower.includes(\"memory\") || questionLower.includes(\"spaced repetition\") || questionLower.includes(\"memorize\")) {\n            suggestedActions.push({\n                label: \"\\uD83C\\uDCCF Create Flashcards\",\n                action: \"generate_flashcards\",\n                icon: \"\\uD83C\\uDCCF\"\n            });\n        }\n        if (questionLower.includes(\"quiz\") || questionLower.includes(\"test\") || questionLower.includes(\"question\")) {\n            suggestedActions.push({\n                label: \"\\uD83D\\uDCDD Generate Practice Questions\",\n                action: \"generate_questions\",\n                icon: \"\\uD83D\\uDCDD\"\n            });\n        }\n        if (questionLower.includes(\"note\") || questionLower.includes(\"summary\") || questionLower.includes(\"study\")) {\n            suggestedActions.push({\n                label: \"\\uD83D\\uDCDA Create Study Notes\",\n                action: \"generate_notes\",\n                icon: \"\\uD83D\\uDCDA\"\n            });\n        }\n        if (questionLower.includes(\"easy\") || questionLower.includes(\"beginner\") || questionLower.includes(\"start\")) {\n            suggestedActions.push({\n                label: \"\\uD83C\\uDFAF Easy Practice\",\n                action: \"easy_quiz\",\n                icon: \"\\uD83C\\uDFAF\"\n            });\n        }\n        if (questionLower.includes(\"hard\") || questionLower.includes(\"difficult\") || questionLower.includes(\"challenge\")) {\n            suggestedActions.push({\n                label: \"\\uD83D\\uDE80 Advanced Challenge\",\n                action: \"hard_quiz\",\n                icon: \"\\uD83D\\uDE80\"\n            });\n        }\n        if (questionLower.includes(\"explain\") || questionLower.includes(\"understand\") || questionLower.includes(\"clarify\")) {\n            suggestedActions.push({\n                label: \"\\uD83D\\uDCA1 Get More Examples\",\n                action: \"explain_more\",\n                icon: \"\\uD83D\\uDCA1\"\n            });\n        }\n        // Add visual learning support\n        if (questionLower.includes(\"visual\") || questionLower.includes(\"diagram\") || questionLower.includes(\"picture\") || questionLower.includes(\"image\")) {\n            suggestedActions.push({\n                label: \"\\uD83C\\uDFA8 Visual Learning Aid\",\n                action: \"create_visual\",\n                icon: \"\\uD83C\\uDFA8\"\n            });\n        }\n        // Add step-by-step breakdown for complex topics\n        if (questionLower.includes(\"step\") || questionLower.includes(\"process\") || questionLower.includes(\"how to\")) {\n            suggestedActions.push({\n                label: \"\\uD83D\\uDCCB Step-by-Step Guide\",\n                action: \"step_by_step\",\n                icon: \"\\uD83D\\uDCCB\"\n            });\n        }\n        // Add default actions if no specific ones were triggered\n        if (suggestedActions.length === 0) {\n            suggestedActions.push({\n                label: \"\\uD83C\\uDCCF Create Flashcards\",\n                action: \"generate_flashcards\",\n                icon: \"\\uD83C\\uDCCF\"\n            }, {\n                label: \"\\uD83D\\uDCDD Practice Questions\",\n                action: \"generate_questions\",\n                icon: \"\\uD83D\\uDCDD\"\n            }, {\n                label: \"\\uD83D\\uDCDA Study Tips\",\n                action: \"study_tips\",\n                icon: \"\\uD83D\\uDCDA\"\n            });\n        }\n        // Topic tagging for better analytics\n        const topicTags = extractTopicTags(question, studyContext);\n        // Generate adaptive follow-up encouragement based on student needs\n        const encouragementOptions = getAdaptiveEncouragement(studentAnalysis, topicTags);\n        const followUpEncouragement = encouragementOptions[Math.floor(Math.random() * encouragementOptions.length)];\n        // Enhanced confidence assessment with patience indicators\n        const confidenceLevel = assessStudentConfidence(question, studentHistory, studentAnalysis);\n        const patienceLevel = calculatePatienceNeeded(confidenceLevel, studentAnalysis);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            response: data?.response || \"I'm here to help you learn!\",\n            suggestedActions: suggestedActions,\n            followUpEncouragement: followUpEncouragement,\n            confidenceLevel: confidenceLevel,\n            metadata: {\n                model: \"Google Gemini 2.5 Flash\",\n                provider: \"OpenRouter\",\n                respondedAt: new Date().toISOString(),\n                questionAnalysis: {\n                    intent: studentAnalysis.intent,\n                    topicTags: topicTags,\n                    suggestionsCount: suggestedActions.length,\n                    confidenceLevel: confidenceLevel,\n                    patienceLevel: patienceLevel,\n                    promptTemperature: temperature,\n                    finalPromptLength: tutorPrompt.length,\n                    needsExtraPatience: studentAnalysis.needsExtraPatience\n                }\n            }\n        });\n    } catch (error) {\n        console.error(\"Tutor chat error:\", error);\n        let errorMessage = \"Failed to get tutor response\";\n        let fallbackMessage = \"I'm having a technical issue right now, but don't let that stop your learning! \\uD83D\\uDCAA\\n\\nHere are some things you can try:\\n• Review your study notes\\n• Practice with flashcards\\n• Try generating some questions\\n• Take a short break and come back refreshed\\n\\nI'll be ready to help when the connection is restored!\";\n        if (error instanceof Error) {\n            errorMessage = error.message;\n            if (error.message.includes(\"Network error\") || error.message.includes(\"Failed to fetch\")) {\n                fallbackMessage = \"I'm having trouble connecting right now, but here's what I suggest:\\n\\n\\uD83D\\uDD04 **Quick Study Tips:**\\n• Review your recent notes\\n• Practice key concepts\\n• Try explaining topics out loud\\n• Take notes on what you want to ask me later\\n\\n\\uD83D\\uDCA1 I'll be back online soon to help with your questions!\";\n            } else if (error.message.includes(\"Rate limit\")) {\n                fallbackMessage = \"I need a moment to recharge! ⚡\\n\\n⏰ **While we wait:**\\n• Review your study materials\\n• Practice previous concepts\\n• Think of questions to ask me\\n• Take a quick study break\\n\\n\\uD83D\\uDE80 Try asking again in a moment!\";\n                // Handle rate limiting with retry headers\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    success: false,\n                    error: errorMessage,\n                    fallbackMessage: fallbackMessage,\n                    suggestedActions: [\n                        {\n                            label: \"\\uD83D\\uDCDA Review Notes\",\n                            action: \"review_notes\",\n                            icon: \"\\uD83D\\uDCDA\"\n                        },\n                        {\n                            label: \"\\uD83D\\uDD04 Try Again\",\n                            action: \"retry\",\n                            icon: \"\\uD83D\\uDD04\"\n                        }\n                    ],\n                    metadata: {\n                        errorOccurred: true,\n                        errorAt: new Date().toISOString(),\n                        retryAfter: 10\n                    }\n                }, {\n                    status: 429,\n                    headers: {\n                        \"Retry-After\": \"10\",\n                        \"X-RateLimit-Reset\": new Date(Date.now() + 10000).toISOString()\n                    }\n                });\n            }\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: errorMessage,\n            fallbackMessage: fallbackMessage,\n            // Provide helpful suggestions even when there's an error\n            suggestedActions: [\n                {\n                    label: \"\\uD83D\\uDCDA Review Notes\",\n                    action: \"review_notes\",\n                    icon: \"\\uD83D\\uDCDA\"\n                },\n                {\n                    label: \"\\uD83D\\uDD04 Try Again\",\n                    action: \"retry\",\n                    icon: \"\\uD83D\\uDD04\"\n                }\n            ],\n            metadata: {\n                errorOccurred: true,\n                errorAt: new Date().toISOString()\n            }\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/tutor-chat/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/ai-agent.ts":
/*!*************************!*\
  !*** ./lib/ai-agent.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AIAgent: () => (/* binding */ AIAgent),\n/* harmony export */   PROMPTS: () => (/* binding */ PROMPTS),\n/* harmony export */   aiAgent: () => (/* binding */ aiAgent),\n/* harmony export */   readFileContent: () => (/* binding */ readFileContent)\n/* harmony export */ });\n// Enhanced helper function to read and analyze file content (TEXT ONLY)\nconst readFileContent = (file)=>{\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        const fileExtension = file.name.split(\".\").pop()?.toLowerCase();\n        reader.onload = (e)=>{\n            try {\n                let content = e.target?.result;\n                // Add file metadata and analysis context\n                let enhancedContent = `FILE ANALYSIS CONTEXT:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n📁 File Name: ${file.name}\n📊 File Size: ${(file.size / 1024).toFixed(2)} KB\n📋 File Type: ${fileExtension?.toUpperCase() || \"Unknown\"}\n🕒 Analysis Date: ${new Date().toLocaleString()}\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\nCONTENT TO ANALYZE:\n${content}\n\nADDITIONAL ANALYSIS INSTRUCTIONS:\n• Extract all mathematical formulas, equations, or numerical data that needs special attention\n• Identify any step-by-step processes, procedures, or workflows mentioned\n• Note any learning aids, mnemonics, or memory techniques suggested in the text\n• Extract any exam-relevant information, key dates, important names, or critical concepts\n• If the content appears to be lecture notes, textbook material, or study guides, structure your analysis accordingly\n• Focus on creating comprehensive text-based study materials\n\nREMEMBER: Students need comprehensive understanding of ALL content for exam success!`;\n                resolve(enhancedContent);\n            } catch (error) {\n                reject(new Error(\"Failed to process file content\"));\n            }\n        };\n        reader.onerror = (e)=>{\n            reject(new Error(`Failed to read file: ${file.name}. Please ensure the file is not corrupted and try again.`));\n        };\n        // Only handle text-based files (no image processing)\n        if (fileExtension && [\n            \"jpg\",\n            \"jpeg\",\n            \"png\",\n            \"gif\",\n            \"bmp\",\n            \"webp\"\n        ].includes(fileExtension)) {\n            reject(new Error(\"Image files are not supported. Please upload text-based documents (PDF, DOCX, TXT, MD).\"));\n            return;\n        }\n        // For text-based files, read as text\n        reader.readAsText(file);\n    });\n};\nclass AIAgent {\n    // 1. Study Note Generation System\n    async generateStudyNotes(content, fileName) {\n        try {\n            const { safePostJSON } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_fetch-helper_ts\").then(__webpack_require__.bind(__webpack_require__, /*! ./fetch-helper */ \"(rsc)/./lib/fetch-helper.ts\"));\n            const result = await safePostJSON(`${this.baseUrl}/generate-notes`, {\n                content,\n                fileName\n            });\n            if (!result.success) {\n                return {\n                    success: false,\n                    error: result.error || \"Failed to generate study notes\"\n                };\n            }\n            return result.data;\n        } catch (error) {\n            return {\n                success: false,\n                error: \"Failed to generate study notes\"\n            };\n        }\n    }\n    // 2. Smart Question Generator\n    async generateQuestion(topic, difficulty, content, previousQuestions = []) {\n        try {\n            const { safePostJSON } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_fetch-helper_ts\").then(__webpack_require__.bind(__webpack_require__, /*! ./fetch-helper */ \"(rsc)/./lib/fetch-helper.ts\"));\n            const result = await safePostJSON(`${this.baseUrl}/generate-question`, {\n                topic,\n                difficulty,\n                content,\n                previousQuestions\n            });\n            if (!result.success) {\n                return {\n                    success: false,\n                    error: result.error || \"Failed to generate question\"\n                };\n            }\n            return result.data;\n        } catch (error) {\n            return {\n                success: false,\n                error: \"Failed to generate question\"\n            };\n        }\n    }\n    // 3. Answer Checking & Feedback\n    async checkAnswer(question, userAnswer, studentContext) {\n        try {\n            const { safePostJSON } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_fetch-helper_ts\").then(__webpack_require__.bind(__webpack_require__, /*! ./fetch-helper */ \"(rsc)/./lib/fetch-helper.ts\"));\n            const result = await safePostJSON(`${this.baseUrl}/check-answer`, {\n                question,\n                userAnswer,\n                studentContext\n            });\n            if (!result.success) {\n                return {\n                    success: false,\n                    error: result.error || \"Failed to check answer\"\n                };\n            }\n            return result.data;\n        } catch (error) {\n            return {\n                success: false,\n                error: \"Failed to check answer\"\n            };\n        }\n    }\n    // 4. Q&A Tutoring Bot\n    async askTutor(question, studyContext, studentHistory) {\n        try {\n            const { safePostJSON } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_fetch-helper_ts\").then(__webpack_require__.bind(__webpack_require__, /*! ./fetch-helper */ \"(rsc)/./lib/fetch-helper.ts\"));\n            const result = await safePostJSON(`${this.baseUrl}/tutor-chat`, {\n                question,\n                studyContext,\n                studentHistory\n            });\n            if (!result.success) {\n                return {\n                    success: false,\n                    error: result.error || \"Failed to get tutor response\"\n                };\n            }\n            return result.data;\n        } catch (error) {\n            return {\n                success: false,\n                error: \"Failed to get tutor response\"\n            };\n        }\n    }\n    // 5. Progress Tracking\n    async updateProgress(action, data) {\n        try {\n            const { safePostJSON } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_fetch-helper_ts\").then(__webpack_require__.bind(__webpack_require__, /*! ./fetch-helper */ \"(rsc)/./lib/fetch-helper.ts\"));\n            const result = await safePostJSON(`${this.baseUrl}/update-progress`, {\n                action,\n                data\n            });\n            if (!result.success) {\n                return {\n                    success: false,\n                    error: result.error || \"Failed to update progress\"\n                };\n            }\n            return result.data;\n        } catch (error) {\n            return {\n                success: false,\n                error: \"Failed to update progress\"\n            };\n        }\n    }\n    // Quick Reference Cards Generator\n    async generateFlashcards(notes) {\n        try {\n            const { safePostJSON } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_fetch-helper_ts\").then(__webpack_require__.bind(__webpack_require__, /*! ./fetch-helper */ \"(rsc)/./lib/fetch-helper.ts\"));\n            const result = await safePostJSON(`${this.baseUrl}/generate-flashcards`, {\n                notes\n            });\n            if (!result.success) {\n                return {\n                    success: false,\n                    error: result.error || \"Failed to generate flashcards\"\n                };\n            }\n            return result.data;\n        } catch (error) {\n            return {\n                success: false,\n                error: \"Failed to generate flashcards\"\n            };\n        }\n    }\n    constructor(){\n        this.baseUrl = \"/api\";\n    }\n}\n// Export singleton instance\nconst aiAgent = new AIAgent();\n// Prompt templates - Updated for DeepSeek V3 (text-only)\nconst PROMPTS = {\n    CONTENT_ANALYSIS: `You are DeepSeek V3, an advanced AI tutor specializing in comprehensive content analysis and educational support.\n\nCRITICAL INSTRUCTIONS:\n- You MUST analyze ONLY the provided content below\n- Extract EXACT information - no hallucination or generic responses\n- Focus on educational value and learning objectives\n- Structure your analysis for optimal learning\n- Be precise and thorough in your educational analysis\n\nCONTENT TO ANALYZE:\n{{CONTENT}}\n\nREQUIRED ANALYSIS STRUCTURE:\n1. **CONTENT TYPE & SCOPE**: [Identify what type of educational material this is]\n2. **PRIMARY LEARNING OBJECTIVES**: [What should students learn from this?]\n3. **KEY CONCEPTS** (Quote exact terms from content):\n   - Concept 1: [exact quote] - [significance]\n   - Concept 2: [exact quote] - [significance]\n   - [Continue for all major concepts]\n4. **FACTUAL DATA** (Numbers, dates, names from content):\n   - [List all specific data points mentioned]\n5. **PROCESSES & PROCEDURES** (If any described):\n   - [Step-by-step processes exactly as described]\n6. **DIFFICULTY ASSESSMENT**: [Beginner/Intermediate/Advanced]\n7. **STUDY PRIORITIES**: [What students should focus on most]\n\nDEEPSEEK INTELLIGENCE GUIDELINES:\n- Be precise and evidence-based\n- Connect concepts logically\n- Identify prerequisite knowledge needed\n- Suggest effective study strategies based on content type`,\n    COMPREHENSIVE_NOTES: `You are DeepSeek V3 creating intelligent study notes. Your task is to transform the provided content into comprehensive, learner-friendly notes.\n\nINSTRUCTIONS:\n- Read and analyze EVERY word of the content below\n- Create structured, educational notes that enhance understanding\n- Use pedagogical principles for effective learning\n- Include memory aids and learning strategies\n- Connect concepts for better comprehension\n\nCONTENT FOR NOTE CREATION:\n{{CONTENT}}\n\nREQUIRED NOTE STRUCTURE:\n\n## 📚 COMPREHENSIVE STUDY NOTES\n\n### 🎯 LEARNING OBJECTIVES\n[What will students master after studying this material?]\n\n### 📋 EXECUTIVE SUMMARY\n[3-4 sentences capturing the essence, using exact quotes]\n\n### 🔑 CORE CONCEPTS & DEFINITIONS\n[For each major concept in the content:]\n- **[Term from content]**: [Definition based on content] \n  - *Context*: [How it's used in the material]\n  - *Significance*: [Why it matters]\n\n### 📊 KEY FACTS & DATA\n[Organize all specific information:]\n- **Numbers & Statistics**: [exact figures from content]\n- **Names & People**: [individuals mentioned]\n- **Dates & Timeline**: [chronological information]\n- **Locations**: [places referenced]\n\n### 🔗 CONCEPT CONNECTIONS\n[How ideas relate to each other based on the content]\n\n### 🧠 MEMORY AIDS\n[Create mnemonics, analogies, or memory techniques for key concepts]\n\n### 📈 STUDY STRATEGIES\n[Recommend specific study methods based on the content type and complexity]\n\n### ⚡ QUICK REVIEW POINTS\n[5-7 bullet points for rapid review]\n\nQUALITY STANDARDS:\n- Every detail must come from the provided content\n- Use educational best practices\n- Optimize for retention and understanding\n- Include specific examples from the material`,\n    MCQ_QUESTION: `You are DeepSeek V3, an expert educational assessment AI. Create an intelligent multiple-choice question.\n\nASSESSMENT INSTRUCTIONS:\n- Analyze the content thoroughly to create meaningful questions\n- Focus on testing understanding, not just memorization\n- Create plausible distractors that reveal common misconceptions\n- Ensure the question aligns with educational best practices\n- Target the specified difficulty level precisely\n\nDIFFICULTY LEVEL: {{DIFFICULTY}}\nTOPIC FOCUS: {{TOPIC}}\nCONTENT CONTEXT: {{CONTENT}}\nAVOID THESE PREVIOUSLY COVERED TOPICS: {{PREVIOUS_TOPICS}}\n\nQUESTION CREATION GUIDELINES:\n\n**FOR EASY QUESTIONS:**\n- Test basic recall and recognition\n- Use direct content references\n- Clear, unambiguous language\n- One obviously correct answer\n\n**FOR MEDIUM QUESTIONS:**\n- Test comprehension and application\n- Require connecting concepts\n- May involve analysis of scenarios\n- Distractors test related concepts\n\n**FOR HARD QUESTIONS:**\n- Test critical thinking and synthesis\n- Require deep understanding\n- May involve evaluation or creation\n- All options should be plausible\n\nREQUIRED OUTPUT FORMAT:\nQUESTION: [Create a clear, well-constructed question that tests {{DIFFICULTY}} level understanding]\n\nA) [Option that tests a plausible misconception]\nB) [Another reasonable but incorrect option]\nC) [Third logical but wrong choice]\nD) [Correct answer that demonstrates true understanding]\n\nCORRECT_ANSWER: [A/B/C/D]\n\nEXPLANATION: [Provide a comprehensive explanation that:\n- Explains why the correct answer is right\n- Briefly explains why other options are incorrect\n- Connects to the broader learning objectives\n- Encourages continued learning]\n\nQUALITY CHECKLIST:\n✓ Question directly relates to provided content\n✓ Difficulty level is appropriate\n✓ All distractors are educationally meaningful\n✓ Explanation enhances understanding\n✓ Language is clear and accessible`,\n    OPEN_ENDED_QUESTION: `You are DeepSeek V3 creating advanced analytical questions for deep learning assessment.\n\nADVANCED QUESTIONING INSTRUCTIONS:\n- Create questions that test critical thinking and synthesis\n- Focus on real-world application and concept integration\n- Encourage multi-step reasoning and analysis\n- Consider multilingual learning when relevant\n\nDIFFICULTY LEVEL: HARD (Advanced Critical Thinking)\nTOPIC FOCUS: {{TOPIC}}\nCONTENT CONTEXT: {{CONTENT}}\n\nQUESTION DESIGN PRINCIPLES:\n\n**COGNITIVE LEVELS TO TARGET:**\n- Analysis: Breaking down complex information\n- Synthesis: Combining ideas in new ways\n- Evaluation: Making judgments based on criteria\n- Creation: Generating new solutions or approaches\n\n**QUESTION CHARACTERISTICS:**\n- Multi-layered with several sub-components\n- Requires evidence-based reasoning\n- Connects to real-world applications\n- May involve scenario analysis or problem-solving\n\nREQUIRED OUTPUT FORMAT:\n\nQUESTION: [Create a sophisticated, multi-part question that requires:\n- Deep analysis of the content concepts\n- Application to new scenarios\n- Justification of reasoning\n- Integration of multiple ideas]\n\nIDEAL_ANSWER: [Provide a comprehensive model answer that:\n- Demonstrates expert-level understanding\n- Shows logical reasoning process\n- Includes specific examples from content\n- Addresses all question components\n- Shows connections between concepts]\n\nEXPLANATION: [Provide guidance that:\n- Breaks down the thinking process required\n- Suggests analysis frameworks to use\n- Identifies key concepts to consider\n- Offers study strategies for similar questions\n- Encourages intellectual curiosity]\n\nQUALITY STANDARDS:\n✓ Question requires genuine critical thinking\n✓ Multiple valid approaches possible\n✓ Directly relates to content learning objectives\n✓ Challenges student to go beyond memorization\n✓ Provides scaffolding for success`,\n    MCQ_CORRECT_FEEDBACK: `🎉 Great job!\n✅ You chose the correct answer: {{CORRECT_ANSWER}}\n🧠 Explanation: {{EXPLANATION}}\n💪 Keep going! You're mastering this topic!`,\n    MCQ_INCORRECT_FEEDBACK: `💙 No worries, mistakes help you learn!\n✅ Correct answer: {{CORRECT_ANSWER}}\n📖 Why it's correct: {{EXPLANATION}}\n📚 Study tip: {{STUDY_TIP}}\n🌟 Keep trying! You're building understanding!`,\n    OPEN_ENDED_FEEDBACK: `RATING: {{RATING}} stars out of 5\n\n🌟 {{PRAISE}}\n💡 Strengths in your answer: {{STRENGTHS}}\n🔍 Areas to improve: {{IMPROVEMENTS}}\n📘 Study tip: {{STUDY_TIP}}\n🚀 {{CONFIDENCE_BOOST}}`,\n    TUTOR_CHAT: `You are DeepSeek V3, an advanced AI tutor for FuturoPal with comprehensive educational capabilities.\n\nTUTORING PERSONA:\n- Patient, encouraging, and intellectually curious\n- Capable of processing and analyzing textual information\n- Supports multilingual learning when appropriate\n- Adapts explanation complexity to student level\n- Uses clear examples and analogies\n\nCURRENT CONTEXT:\nStudy Material: {{STUDY_CONTEXT}}\nStudent Question: {{QUESTION}}\nLearning History: {{HISTORY}}\n\nTUTORING FRAMEWORK:\n\n**1. UNDERSTANDING ASSESSMENT**\n- Analyze the student's question for comprehension level\n- Identify any misconceptions or knowledge gaps\n- Determine the best explanation approach\n\n**2. ADAPTIVE EXPLANATION**\n- Start with student's current understanding level\n- Use analogies and real-world connections\n- Break complex concepts into digestible steps\n- Include relevant examples\n\n**3. EDUCATIONAL SUPPORT**\n- Provide clear, structured explanations\n- Use step-by-step reasoning when needed\n- Reference the study material appropriately\n- Suggest effective learning techniques\n\n**4. MULTILINGUAL SUPPORT** (when appropriate)\n- Provide key terms in different languages if helpful\n- Use culturally relevant examples\n- Explain concepts using familiar contexts\n\n**5. ENCOURAGEMENT & GROWTH**\n- Acknowledge effort and progress\n- Build confidence through positive reinforcement\n- Suggest next learning steps\n- Connect to broader learning goals\n\nRESPONSE STRUCTURE:\n🎯 **Direct Answer**: [Clear, concise response to their question]\n\n🧠 **Deeper Understanding**: [Expanded explanation with context]\n\n🌟 **Real-World Connection**: [Practical application or example]\n\n📚 **Study Tip**: [Specific learning strategy for this topic]\n\n🚀 **Next Steps**: [What to explore or practice next]\n\nCOMMUNICATION STANDARDS:\n- Use encouraging, educational tone\n- Include relevant emojis for engagement\n- Provide concrete, actionable advice\n- Connect to their learning journey\n- Maintain intellectual rigor while being accessible`,\n    FLASHCARDS: `You are DeepSeek V3 creating intelligent flashcards with advanced learning support capabilities.\n\nFLASHCARD DESIGN PRINCIPLES:\n- Use spaced repetition optimization\n- Include memory aids and learning techniques\n- Support different learning styles\n- Create multilingual cards when beneficial\n- Use cognitive science for better retention\n\nSTUDY NOTES TO PROCESS: {{NOTES}}\n\nFLASHCARD CREATION GUIDELINES:\n\n**CARD TYPES TO CREATE:**\n1. **Definition Cards**: Key terms and concepts\n2. **Process Cards**: Step-by-step procedures\n3. **Application Cards**: Real-world usage examples\n4. **Connection Cards**: Relationships between ideas\n5. **Review Cards**: Quick recall for important facts\n\n**ENHANCED FLASHCARD FORMAT:**\n\n**🎯 CARD 1: [Primary Concept from Notes]**\n**FRONT:** [Engaging question using active recall]\n**BACK:** [Comprehensive answer with memory aids]\n- *Core Answer*: [Direct response with notes quotes]\n- *Memory Hook*: [Mnemonic, analogy, or pattern]\n- *Connection*: [Link to related concepts]\n- *Study Tip*: [How to remember this effectively]\n\n**🧠 CARD 2: [Application Concept]**\n**FRONT:** [Scenario-based question]\n**BACK:** [Solution approach with examples]\n- *Core Answer*: [Practical application from notes]\n- *Memory Hook*: [Real-world analogy]\n- *Connection*: [How this applies elsewhere]\n\n**📊 CARD 3: [Data/Facts Concept]**\n**FRONT:** [Specific factual question]\n**BACK:** [Precise information with context]\n- *Core Answer*: [Exact facts/numbers from notes]\n- *Memory Hook*: [Number pattern or association]\n- *Connection*: [Why this data matters]\n\n[Continue for 6-8 cards total]\n\nOPTIMIZATION FEATURES:\n✓ Each card targets specific cognitive load\n✓ Progressive difficulty within card set\n✓ Multiple retrieval pathways per concept\n✓ Memory activation techniques\n✓ Cultural and contextual relevance\n✓ Spaced repetition compatibility`\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/ai-agent.ts\n");

/***/ }),

/***/ "(rsc)/./lib/openrouter-client.ts":
/*!**********************************!*\
  !*** ./lib/openrouter-client.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenRouterClient: () => (/* binding */ OpenRouterClient),\n/* harmony export */   openRouterClient: () => (/* binding */ openRouterClient)\n/* harmony export */ });\nclass OpenRouterClient {\n    async generateResponse(params) {\n        try {\n            const messages = [];\n            // Add system message if provided\n            if (params.systemPrompt) {\n                messages.push({\n                    role: \"system\",\n                    content: params.systemPrompt\n                });\n            }\n            // Add user prompt\n            messages.push({\n                role: \"user\",\n                content: params.prompt\n            });\n            const requestBody = {\n                model: this.model,\n                messages: messages,\n                temperature: params.options?.temperature ?? 0.1,\n                top_p: params.options?.top_p ?? 0.7,\n                max_tokens: params.options?.max_tokens ?? 2000,\n                stream: false\n            };\n            console.log(\"OpenRouter request:\", {\n                model: this.model,\n                messageCount: messages.length\n            });\n            const response = await fetch(this.baseUrl, {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": `Bearer ${this.apiKey}`,\n                    \"Content-Type\": \"application/json\",\n                    \"HTTP-Referer\": \"http://localhost:3000\",\n                    \"X-Title\": \"FuturoPal AI Tutor\"\n                },\n                body: JSON.stringify(requestBody)\n            });\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.error(\"OpenRouter API Error:\", errorText);\n                throw new Error(`OpenRouter API error: ${response.status} ${response.statusText} - ${errorText}`);\n            }\n            const data = await response.json();\n            console.log(\"OpenRouter response received:\", {\n                model: data.model,\n                usage: data.usage\n            });\n            if (!data.choices || !data.choices[0] || !data.choices[0].message) {\n                throw new Error(\"Invalid response structure from OpenRouter API\");\n            }\n            const content = data.choices[0].message.content;\n            if (!content) {\n                throw new Error(\"No content in OpenRouter response\");\n            }\n            return {\n                success: true,\n                data: {\n                    response: content,\n                    model: data.model || this.model,\n                    usage: data.usage\n                }\n            };\n        } catch (error) {\n            console.error(\"OpenRouter client error:\", error);\n            let errorMessage = \"Failed to connect to AI service\";\n            if (error instanceof Error) {\n                if (error.message.includes(\"Failed to fetch\") || error.message.includes(\"NetworkError\")) {\n                    errorMessage = \"Network error connecting to AI service. Please check your internet connection.\";\n                } else if (error.message.includes(\"401\")) {\n                    errorMessage = \"Authentication failed. Please check API key configuration.\";\n                } else if (error.message.includes(\"429\")) {\n                    errorMessage = \"Rate limit exceeded. Please wait a moment and try again.\";\n                } else if (error.message.includes(\"400\")) {\n                    errorMessage = \"Invalid request format or model configuration. Please check the model ID.\";\n                } else if (error.message.includes(\"not a valid model ID\")) {\n                    errorMessage = `Model ID '${this.model}' is not valid. Please check OpenRouter model availability.`;\n                } else {\n                    errorMessage = `AI service error: ${error.message}`;\n                }\n            }\n            return {\n                success: false,\n                error: errorMessage\n            };\n        }\n    }\n    async healthCheck() {\n        try {\n            console.log(\"Testing OpenRouter health with model:\", this.model);\n            const testResponse = await this.generateResponse({\n                prompt: \"Hello, are you working correctly? Please respond briefly.\",\n                systemPrompt: \"You are Google Gemini 2.5 Flash, a helpful AI assistant. Respond briefly to confirm you are working.\",\n                options: {\n                    max_tokens: 50\n                }\n            });\n            if (testResponse.success) {\n                console.log(\"OpenRouter health check successful\");\n                return {\n                    success: true,\n                    model: this.model\n                };\n            } else {\n                console.error(\"OpenRouter health check failed:\", testResponse.error);\n                return {\n                    success: false,\n                    error: testResponse.error || \"Health check failed\"\n                };\n            }\n        } catch (error) {\n            console.error(\"Health check error:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown health check error\"\n            };\n        }\n    }\n    constructor(){\n        this.baseUrl = \"https://openrouter.ai/api/v1/chat/completions\";\n        this.apiKey = \"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\";\n        this.model = \"google/gemini-2.5-flash\";\n    }\n}\nconst openRouterClient = new OpenRouterClient();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/openrouter-client.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftutor-chat%2Froute&page=%2Fapi%2Ftutor-chat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftutor-chat%2Froute.ts&appDir=C%3A%5CUsers%5Cchanj%5COneDrive%5CDesktop%5Chackathon%20project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cchanj%5COneDrive%5CDesktop%5Chackathon%20project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();