"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/modern-ahocorasick";
exports.ids = ["vendor-chunks/modern-ahocorasick"];
exports.modules = {

/***/ "(ssr)/./node_modules/modern-ahocorasick/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/modern-ahocorasick/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AhoCorasick)\n/* harmony export */ });\n// src/index.ts\nvar AhoCorasick = class {\n  constructor(keywords) {\n    const { failure, gotoFn, output } = this._buildTables(keywords);\n    this.gotoFn = gotoFn;\n    this.output = output;\n    this.failure = failure;\n  }\n  _buildTables(keywords) {\n    const gotoFn = {\n      0: {}\n    };\n    const output = {};\n    let state = 0;\n    for (const word of keywords) {\n      let curr = 0;\n      for (const l of word) {\n        if (gotoFn[curr] && l in gotoFn[curr]) {\n          curr = gotoFn[curr][l];\n        } else {\n          state++;\n          gotoFn[curr][l] = state;\n          gotoFn[state] = {};\n          curr = state;\n          output[state] = [];\n        }\n      }\n      output[curr].push(word);\n    }\n    const failure = {};\n    const xs = [];\n    for (const l in gotoFn[0]) {\n      const state2 = gotoFn[0][l];\n      failure[state2] = 0;\n      xs.push(state2);\n    }\n    while (xs.length > 0) {\n      const r = xs.shift();\n      if (r !== void 0) {\n        for (const l in gotoFn[r]) {\n          const s = gotoFn[r][l];\n          xs.push(s);\n          let state2 = failure[r];\n          while (state2 > 0 && !(l in gotoFn[state2])) {\n            state2 = failure[state2];\n          }\n          if (l in gotoFn[state2]) {\n            const fs = gotoFn[state2][l];\n            failure[s] = fs;\n            output[s] = [...output[s], ...output[fs]];\n          } else {\n            failure[s] = 0;\n          }\n        }\n      }\n    }\n    return {\n      gotoFn,\n      output,\n      failure\n    };\n  }\n  search(str) {\n    let state = 0;\n    const results = [];\n    for (let i = 0; i < str.length; i++) {\n      const l = str[i];\n      while (state > 0 && !(l in this.gotoFn[state])) {\n        state = this.failure[state];\n      }\n      if (!(l in this.gotoFn[state])) {\n        continue;\n      }\n      state = this.gotoFn[state][l];\n      if (this.output[state].length > 0) {\n        const foundStrs = this.output[state];\n        results.push([i, foundStrs]);\n      }\n    }\n    return results;\n  }\n  match(str) {\n    let state = 0;\n    for (let i = 0; i < str.length; i++) {\n      const l = str[i];\n      while (state > 0 && !(l in this.gotoFn[state])) {\n        state = this.failure[state];\n      }\n      if (!(l in this.gotoFn[state])) {\n        continue;\n      }\n      state = this.gotoFn[state][l];\n      if (this.output[state].length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbW9kZXJuLWFob2NvcmFzaWNrL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMEJBQTBCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXR1cm9wYWwtZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL21vZGVybi1haG9jb3Jhc2ljay9kaXN0L2luZGV4LmpzPzY4NzkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2luZGV4LnRzXG52YXIgQWhvQ29yYXNpY2sgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKGtleXdvcmRzKSB7XG4gICAgY29uc3QgeyBmYWlsdXJlLCBnb3RvRm4sIG91dHB1dCB9ID0gdGhpcy5fYnVpbGRUYWJsZXMoa2V5d29yZHMpO1xuICAgIHRoaXMuZ290b0ZuID0gZ290b0ZuO1xuICAgIHRoaXMub3V0cHV0ID0gb3V0cHV0O1xuICAgIHRoaXMuZmFpbHVyZSA9IGZhaWx1cmU7XG4gIH1cbiAgX2J1aWxkVGFibGVzKGtleXdvcmRzKSB7XG4gICAgY29uc3QgZ290b0ZuID0ge1xuICAgICAgMDoge31cbiAgICB9O1xuICAgIGNvbnN0IG91dHB1dCA9IHt9O1xuICAgIGxldCBzdGF0ZSA9IDA7XG4gICAgZm9yIChjb25zdCB3b3JkIG9mIGtleXdvcmRzKSB7XG4gICAgICBsZXQgY3VyciA9IDA7XG4gICAgICBmb3IgKGNvbnN0IGwgb2Ygd29yZCkge1xuICAgICAgICBpZiAoZ290b0ZuW2N1cnJdICYmIGwgaW4gZ290b0ZuW2N1cnJdKSB7XG4gICAgICAgICAgY3VyciA9IGdvdG9GbltjdXJyXVtsXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdGF0ZSsrO1xuICAgICAgICAgIGdvdG9GbltjdXJyXVtsXSA9IHN0YXRlO1xuICAgICAgICAgIGdvdG9GbltzdGF0ZV0gPSB7fTtcbiAgICAgICAgICBjdXJyID0gc3RhdGU7XG4gICAgICAgICAgb3V0cHV0W3N0YXRlXSA9IFtdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBvdXRwdXRbY3Vycl0ucHVzaCh3b3JkKTtcbiAgICB9XG4gICAgY29uc3QgZmFpbHVyZSA9IHt9O1xuICAgIGNvbnN0IHhzID0gW107XG4gICAgZm9yIChjb25zdCBsIGluIGdvdG9GblswXSkge1xuICAgICAgY29uc3Qgc3RhdGUyID0gZ290b0ZuWzBdW2xdO1xuICAgICAgZmFpbHVyZVtzdGF0ZTJdID0gMDtcbiAgICAgIHhzLnB1c2goc3RhdGUyKTtcbiAgICB9XG4gICAgd2hpbGUgKHhzLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IHIgPSB4cy5zaGlmdCgpO1xuICAgICAgaWYgKHIgIT09IHZvaWQgMCkge1xuICAgICAgICBmb3IgKGNvbnN0IGwgaW4gZ290b0ZuW3JdKSB7XG4gICAgICAgICAgY29uc3QgcyA9IGdvdG9GbltyXVtsXTtcbiAgICAgICAgICB4cy5wdXNoKHMpO1xuICAgICAgICAgIGxldCBzdGF0ZTIgPSBmYWlsdXJlW3JdO1xuICAgICAgICAgIHdoaWxlIChzdGF0ZTIgPiAwICYmICEobCBpbiBnb3RvRm5bc3RhdGUyXSkpIHtcbiAgICAgICAgICAgIHN0YXRlMiA9IGZhaWx1cmVbc3RhdGUyXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGwgaW4gZ290b0ZuW3N0YXRlMl0pIHtcbiAgICAgICAgICAgIGNvbnN0IGZzID0gZ290b0ZuW3N0YXRlMl1bbF07XG4gICAgICAgICAgICBmYWlsdXJlW3NdID0gZnM7XG4gICAgICAgICAgICBvdXRwdXRbc10gPSBbLi4ub3V0cHV0W3NdLCAuLi5vdXRwdXRbZnNdXTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZmFpbHVyZVtzXSA9IDA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICBnb3RvRm4sXG4gICAgICBvdXRwdXQsXG4gICAgICBmYWlsdXJlXG4gICAgfTtcbiAgfVxuICBzZWFyY2goc3RyKSB7XG4gICAgbGV0IHN0YXRlID0gMDtcbiAgICBjb25zdCByZXN1bHRzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGwgPSBzdHJbaV07XG4gICAgICB3aGlsZSAoc3RhdGUgPiAwICYmICEobCBpbiB0aGlzLmdvdG9GbltzdGF0ZV0pKSB7XG4gICAgICAgIHN0YXRlID0gdGhpcy5mYWlsdXJlW3N0YXRlXTtcbiAgICAgIH1cbiAgICAgIGlmICghKGwgaW4gdGhpcy5nb3RvRm5bc3RhdGVdKSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHN0YXRlID0gdGhpcy5nb3RvRm5bc3RhdGVdW2xdO1xuICAgICAgaWYgKHRoaXMub3V0cHV0W3N0YXRlXS5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnN0IGZvdW5kU3RycyA9IHRoaXMub3V0cHV0W3N0YXRlXTtcbiAgICAgICAgcmVzdWx0cy5wdXNoKFtpLCBmb3VuZFN0cnNdKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH1cbiAgbWF0Y2goc3RyKSB7XG4gICAgbGV0IHN0YXRlID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgbCA9IHN0cltpXTtcbiAgICAgIHdoaWxlIChzdGF0ZSA+IDAgJiYgIShsIGluIHRoaXMuZ290b0ZuW3N0YXRlXSkpIHtcbiAgICAgICAgc3RhdGUgPSB0aGlzLmZhaWx1cmVbc3RhdGVdO1xuICAgICAgfVxuICAgICAgaWYgKCEobCBpbiB0aGlzLmdvdG9GbltzdGF0ZV0pKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgc3RhdGUgPSB0aGlzLmdvdG9GbltzdGF0ZV1bbF07XG4gICAgICBpZiAodGhpcy5vdXRwdXRbc3RhdGVdLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIEFob0NvcmFzaWNrIGFzIGRlZmF1bHRcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/modern-ahocorasick/dist/index.js\n");

/***/ })

};
;